using Autodesk.AutoCAD.Runtime;
using Autodesk.Fabrication;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;

namespace CODE.CADmep.Free
{
    public static class RevitSupport
    {
        [CommandMethod("RevitSupportReport")]
        public static void RevitSupportReport()
        {
            UI.StartTimer();
            StringBuilder sb = new StringBuilder();
            sb.AppendLine("PATNO,ITEM NAME,2016,2017,2018,2019,2020,2021,2022,2023,2024");
            Dictionary<int, string> patterns = new Dictionary<int, string>();
            IEnumerable<Item> items = DiskDatabase.GetDatabaseItems();
            foreach (Item itm in DiskDatabase.GetDatabaseItems())
            {
                int patNo = itm.PatternNumber;
                if (!patterns.ContainsKey(patNo))
                {
                    patterns.Add(patNo, $"{patNo.IsSupportedIn(2016)},{patNo.IsSupportedIn(2017)},{patNo.IsSupportedIn(2018)},{patNo.IsSupportedIn(2019)},{patNo.IsSupportedIn(2020)},{patNo.IsSupportedIn(2021)},{patNo.IsSupportedIn(2022)},{patNo.IsSupportedIn(2023)},{patNo.IsSupportedIn(2024)}");
                }
                sb.AppendLine($"{patNo},{itm.GetPath(true)},{patterns[patNo]}");
            }
            string file = Path.Combine(DiskDatabase.ItemsPath, "RevitSupportReport.csv");
            using (StreamWriter streamWriter = new StreamWriter(file))
            {
                streamWriter.Write(sb.ToString());
            }
            Sys.OpenFileInApp(file);
            UI.Popup($"{items.Count()} items checked for RevitSupportReport.csv. Duration: {UI.StopTimer()}.");
        }
        public static string IsSupportedIn(this int patNo, int year)
        {
            return patNo.IsSupportedInRevit(year) ? "Yes" : patNo.IsRiskInRevit(year) ? "Risk" : "No";
        }
        static bool IsSupportedInRevit(this int patNo, int year)
        {
            HashSet<int> supportedYears = null;
            switch (year)
            {
                case 2016:
                    supportedYears = Supported2016;
                    break;
                case 2017:
                    supportedYears = Supported2017;
                    break;
                case 2018:
                    supportedYears = Supported2018;
                    break;
                case 2019:
                    supportedYears = Supported2019;
                    break;
                case 2020:
                    supportedYears = Supported2020;
                    break;
                case 2021:
                    supportedYears = Supported2021;
                    break;
                case 2022:
                    supportedYears = Supported2022;
                    break;
                case 2023:
                    supportedYears = Supported2023;
                    break;
                case 2024:
                    supportedYears = Supported2024;
                    break;
            }
            return supportedYears?.Contains(patNo) ?? false;
        }
        static bool IsRiskInRevit(this int patNo, int year)
        {
            HashSet<int> riskYears = null;
            switch (year)
            {
                case 2016:
                    riskYears = Risk2016;
                    break;
                case 2017:
                    riskYears = Risk2017;
                    break;
                case 2018:
                    riskYears = Risk2018;
                    break;
                case 2019:
                    riskYears = Risk2019;
                    break;
                case 2020:
                    riskYears = Risk2020;
                    break;
                case 2021:
                    riskYears = Risk2021;
                    break;
                case 2022:
                    riskYears = Risk2022;
                    break;
                case 2023:
                    riskYears = Risk2023;
                    break;
                case 2024:
                    riskYears = Risk2024;
                    break;
            }
            return riskYears?.Contains(patNo) ?? false;
        }
        #region RevitSupportedPatterNumbers
        static HashSet<int> Supported2016 => new HashSet<int>
        {
            1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 132, 133, 134, 135, 136, 137, 139, 140, 142, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 162, 163, 165, 166, 169, 170, 171, 172, 173, 182, 183, 184, 185, 186, 222, 231, 250, 251, 252, 253, 254, 255, 309, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 336, 338, 340, 341, 342, 343, 344, 345, 354, 355, 356, 357, 358, 359, 360, 365, 366, 367, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 393, 394, 395, 399, 401, 410, 411, 412, 413, 417, 420, 421, 430, 431, 440, 441, 450, 451, 460, 461, 470, 471, 472, 480, 501, 502, 504, 507, 509, 514, 515, 518, 519, 522, 523, 524, 525, 526, 533, 535, 555, 556, 557, 580, 751, 760, 761, 800, 801, 802, 807, 808, 809, 811, 812, 813, 814, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 830, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 848, 849, 850, 851, 852, 854, 856, 857, 858, 859, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 911, 914, 916, 917, 918, 919, 920, 921, 923, 924, 925, 926, 927, 929, 931, 932, 933, 934, 935, 936, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 965, 967, 970, 972, 976, 977, 978, 979, 981, 984, 986, 987, 988, 989, 995, 1000, 1101, 1104, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1151, 1153, 1154, 1155, 1156, 1158, 1163, 1164, 1166, 1167, 1170, 1171, 1172, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1197, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1522, 1972, 2040, 2041, 2042, 2044, 2047, 2051, 2060, 2071, 2072, 2082, 2097, 2108, 2148, 2149, 2155, 2160, 2182, 2183, 2184, 2186, 2187, 2188, 2193, 2194, 2195, 2196, 2326, 2386, 2388, 2522, 2523, 2524, 2751, 2814, 2821, 2857, 2868, 2875, 2881, 2882, 2883, 2884, 2885, 2886, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 2916, 2938, 2965, 2966, 2967, 2979, 3041, 3051, 3060, 3071, 3386, 3522, 3523, 4522
        };
        static HashSet<int> Supported2017 => new HashSet<int>
        {
            1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 132, 133, 134, 135, 136, 137, 139, 140, 142, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 162, 163, 165, 166, 169, 170, 171, 172, 173, 183, 184, 185, 186, 231, 250, 251, 252, 253, 254, 255, 309, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 336, 338, 340, 341, 342, 343, 344, 345, 354, 355, 356, 357, 358, 359, 360, 365, 366, 367, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 391, 393, 394, 395, 399, 401, 410, 411, 412, 413, 417, 420, 421, 430, 431, 440, 441, 450, 451, 460, 461, 470, 471, 472, 480, 501, 502, 504, 506, 507, 509, 514, 515, 518, 519, 522, 523, 524, 525, 526, 533, 535, 555, 556, 557, 580, 751, 760, 761, 800, 801, 802, 807, 808, 809, 811, 812, 813, 814, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 830, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 848, 849, 850, 851, 852, 854, 856, 857, 858, 859, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 911, 914, 916, 917, 918, 919, 920, 921, 923, 924, 925, 926, 927, 929, 931, 932, 933, 934, 935, 936, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 965, 967, 970, 972, 976, 977, 978, 979, 981, 984, 986, 987, 988, 989, 995, 1000, 1101, 1104, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1151, 1153, 1154, 1155, 1156, 1158, 1163, 1164, 1166, 1167, 1171, 1172, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1197, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1522, 1972, 2040, 2041, 2042, 2044, 2047, 2051, 2060, 2071, 2072, 2082, 2097, 2108, 2148, 2149, 2155, 2160, 2182, 2183, 2184, 2186, 2187, 2188, 2193, 2194, 2195, 2196, 2197, 2198, 2326, 2386, 2388, 2522, 2523, 2524, 2751, 2814, 2821, 2857, 2868, 2869, 2875, 2881, 2882, 2883, 2884, 2885, 2886, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 2916, 2938, 2965, 2966, 2967, 2979, 3041, 3051, 3060, 3071, 3386, 3522, 3523, 4522,
        };
        static HashSet<int> Supported2018 => new HashSet<int>
        {
            1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 132, 133, 134, 135, 136, 137, 139, 140, 142, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 162, 163, 165, 166, 169, 170, 171, 172, 173, 183, 184, 185, 186, 217, 231, 250, 251, 252, 253, 254, 255, 309, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 336, 338, 340, 341, 342, 343, 344, 345, 354, 355, 356, 357, 358, 359, 360, 365, 366, 367, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 391, 393, 394, 395, 399, 401, 410, 411, 412, 413, 417, 420, 421, 430, 431, 440, 441, 450, 451, 460, 461, 470, 471, 472, 480, 501, 502, 504, 506, 507, 509, 514, 515, 518, 519, 522, 523, 524, 525, 526, 533, 535, 555, 556, 557, 580, 751, 760, 761, 800, 801, 802, 807, 808, 809, 811, 812, 813, 814, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 830, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 848, 849, 850, 851, 852, 854, 856, 857, 858, 859, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 911, 914, 916, 917, 918, 919, 920, 921, 923, 924, 925, 926, 927, 929, 931, 932, 933, 934, 935, 936, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 965, 967, 970, 972, 976, 977, 978, 979, 981, 984, 986, 987, 988, 989, 995, 1000, 1101, 1104, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1151, 1153, 1154, 1155, 1156, 1158, 1163, 1164, 1166, 1167, 1171, 1172, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1197, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1522, 1972, 2040, 2041, 2042, 2044, 2047, 2051, 2060, 2071, 2072, 2082, 2097, 2108, 2148, 2149, 2155, 2160, 2182, 2183, 2184, 2186, 2187, 2188, 2193, 2194, 2195, 2196, 2197, 2198, 2217, 2326, 2386, 2388, 2522, 2523, 2524, 2751, 2814, 2821, 2857, 2868, 2869, 2875, 2881, 2882, 2883, 2884, 2885, 2886, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 2916, 2938, 2965, 2966, 2967, 2979, 3041, 3051, 3060, 3071, 3386, 3522, 3523, 4522,
        };
        static HashSet<int> Supported2019 => new HashSet<int>
        {
            1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 132, 133, 134, 135, 136, 137, 139, 140, 142, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 162, 163, 165, 166, 169, 170, 171, 172, 173, 183, 184, 185, 186, 217, 231, 250, 251, 252, 253, 254, 255, 309, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 336, 338, 340, 341, 342, 343, 344, 345, 354, 355, 356, 357, 358, 359, 360, 365, 366, 367, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 391, 393, 394, 395, 399, 401, 410, 411, 412, 413, 417, 420, 421, 430, 431, 440, 441, 450, 451, 460, 461, 470, 471, 472, 480, 501, 502, 504, 506, 507, 509, 514, 515, 518, 519, 522, 523, 524, 525, 526, 533, 535, 555, 556, 557, 580, 751, 760, 761, 800, 801, 802, 807, 808, 809, 811, 812, 813, 814, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 830, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 848, 849, 850, 851, 852, 854, 856, 857, 858, 859, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 911, 914, 916, 917, 918, 919, 920, 921, 923, 924, 925, 926, 927, 929, 931, 932, 933, 934, 935, 936, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 965, 967, 970, 972, 976, 977, 978, 979, 981, 984, 986, 987, 988, 989, 995, 1000, 1101, 1104, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1151, 1153, 1154, 1155, 1156, 1158, 1163, 1164, 1166, 1167, 1171, 1172, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1197, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1522, 1972, 2040, 2041, 2042, 2044, 2047, 2051, 2060, 2071, 2072, 2082, 2097, 2108, 2148, 2149, 2155, 2160, 2182, 2183, 2184, 2186, 2187, 2188, 2193, 2194, 2195, 2196, 2197, 2198, 2217, 2326, 2386, 2388, 2522, 2523, 2524, 2751, 2814, 2821, 2857, 2868, 2869, 2875, 2881, 2882, 2883, 2884, 2885, 2886, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 2916, 2938, 2965, 2966, 2967, 2979, 3041, 3051, 3060, 3071, 3386, 3522, 3523, 4522,
        };
        static HashSet<int> Supported2020 => new HashSet<int>
        {
            1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 132, 133, 134, 135, 136, 137, 139, 140, 142, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 162, 163, 165, 166, 169, 170, 171, 172, 173, 183, 184, 185, 186, 217, 231, 250, 251, 252, 253, 254, 255, 309, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 336, 338, 340, 341, 342, 343, 344, 345, 354, 355, 356, 357, 358, 359, 360, 365, 366, 367, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 391, 393, 394, 395, 399, 401, 410, 411, 412, 413, 417, 420, 421, 430, 431, 440, 441, 450, 451, 460, 461, 470, 471, 472, 480, 501, 502, 504, 506, 507, 509, 514, 515, 518, 519, 522, 523, 524, 525, 526, 533, 535, 555, 556, 557, 580, 751, 760, 761, 800, 801, 802, 807, 808, 809, 811, 812, 813, 814, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 830, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 848, 849, 850, 851, 852, 854, 856, 857, 858, 859, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 911, 914, 916, 917, 918, 919, 920, 921, 923, 924, 925, 926, 927, 929, 931, 932, 933, 934, 935, 936, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 965, 967, 970, 972, 976, 977, 978, 979, 981, 984, 986, 987, 988, 989, 995, 1000, 1101, 1104, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1151, 1153, 1154, 1155, 1156, 1158, 1163, 1164, 1166, 1167, 1171, 1172, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1197, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1522, 1972, 2040, 2041, 2042, 2044, 2047, 2051, 2060, 2071, 2072, 2082, 2097, 2108, 2148, 2149, 2155, 2160, 2182, 2183, 2184, 2186, 2187, 2188, 2193, 2194, 2195, 2196, 2197, 2198, 2217, 2326, 2386, 2388, 2522, 2523, 2524, 2751, 2814, 2821, 2857, 2868, 2869, 2875, 2881, 2882, 2883, 2884, 2885, 2886, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 2916, 2938, 2965, 2966, 2967, 2979, 3041, 3051, 3060, 3071, 3386, 3522, 3523, 4522,
        };
        static HashSet<int> Supported2021 => new HashSet<int>
        {
            1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 132, 133, 134, 135, 136, 137, 139, 140, 142, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 162, 163, 165, 166, 169, 170, 171, 172, 173, 183, 184, 185, 186, 217, 231, 250, 251, 252, 253, 254, 255, 309, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 336, 338, 340, 341, 342, 343, 344, 345, 354, 355, 356, 357, 358, 359, 360, 365, 366, 367, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 391, 393, 394, 395, 399, 401, 410, 411, 412, 413, 417, 420, 421, 430, 431, 440, 441, 450, 451, 460, 461, 470, 471, 472, 480, 501, 502, 504, 506, 507, 509, 514, 515, 518, 519, 522, 523, 524, 525, 526, 533, 535, 555, 556, 557, 580, 751, 760, 761, 800, 801, 802, 807, 808, 809, 811, 812, 813, 814, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 830, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 848, 849, 850, 851, 852, 854, 856, 857, 858, 859, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 911, 914, 916, 917, 918, 919, 920, 921, 923, 924, 925, 926, 927, 929, 931, 932, 933, 934, 935, 936, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 965, 967, 970, 972, 976, 977, 978, 979, 981, 984, 986, 987, 988, 989, 995, 1000, 1101, 1104, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1151, 1153, 1154, 1155, 1156, 1158, 1163, 1164, 1166, 1167, 1171, 1172, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1197, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1522, 1972, 2040, 2041, 2042, 2044, 2047, 2051, 2060, 2071, 2072, 2082, 2097, 2108, 2148, 2149, 2155, 2160, 2182, 2183, 2184, 2186, 2187, 2188, 2193, 2194, 2195, 2196, 2197, 2198, 2217, 2326, 2386, 2388, 2522, 2523, 2524, 2751, 2814, 2821, 2857, 2868, 2869, 2875, 2881, 2882, 2883, 2884, 2885, 2886, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 2916, 2938, 2965, 2966, 2967, 2979, 3041, 3051, 3060, 3071, 3386, 3522, 3523, 4522,
        };
        static HashSet<int> Supported2022 => new HashSet<int>
        {
            1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 132, 133, 134, 135, 136, 137, 139, 140, 142, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 162, 163, 165, 166, 169, 170, 171, 172, 173, 183, 184, 185, 186, 217, 231, 250, 251, 252, 253, 254, 255, 309, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 336, 338, 340, 341, 342, 343, 344, 345, 354, 355, 356, 357, 358, 359, 360, 365, 366, 367, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 391, 393, 394, 395, 399, 401, 410, 411, 412, 413, 417, 420, 421, 430, 431, 440, 441, 450, 451, 460, 461, 470, 471, 472, 480, 501, 502, 504, 506, 507, 509, 514, 515, 518, 519, 522, 523, 524, 525, 526, 533, 535, 555, 556, 557, 580, 751, 760, 761, 800, 801, 802, 807, 808, 809, 811, 812, 813, 814, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 830, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 848, 849, 850, 851, 852, 854, 856, 857, 858, 859, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 911, 914, 916, 917, 918, 919, 920, 921, 923, 924, 925, 926, 927, 929, 931, 932, 933, 934, 935, 936, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 965, 967, 970, 972, 976, 977, 978, 979, 981, 984, 986, 987, 988, 989, 995, 1000, 1101, 1104, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1151, 1153, 1154, 1155, 1156, 1158, 1163, 1164, 1166, 1167, 1171, 1172, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1197, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1522, 1972, 2040, 2041, 2042, 2044, 2047, 2051, 2060, 2071, 2072, 2082, 2097, 2108, 2148, 2149, 2155, 2160, 2182, 2183, 2184, 2186, 2187, 2188, 2193, 2194, 2195, 2196, 2197, 2198, 2217, 2326, 2386, 2388, 2522, 2523, 2524, 2751, 2814, 2821, 2857, 2868, 2869, 2875, 2881, 2882, 2883, 2884, 2885, 2886, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 2916, 2938, 2965, 2966, 2967, 2979, 3041, 3051, 3060, 3071, 3386, 3522, 3523, 4522,
        };
        static HashSet<int> Supported2023 => new HashSet<int>
        {
            1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 132, 133, 134, 135, 136, 137, 139, 140, 142, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 162, 163, 165, 166, 169, 170, 171, 172, 173, 183, 184, 185, 186, 217, 231, 250, 251, 252, 253, 254, 255, 309, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 336, 338, 340, 341, 342, 343, 344, 345, 354, 355, 356, 357, 358, 359, 360, 365, 366, 367, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 391, 393, 394, 395, 399, 401, 410, 411, 412, 413, 417, 420, 421, 430, 431, 440, 441, 450, 451, 460, 461, 470, 471, 472, 480, 501, 502, 504, 506, 507, 509, 514, 515, 518, 519, 522, 523, 524, 525, 526, 533, 535, 555, 556, 557, 580, 751, 760, 761, 800, 801, 802, 807, 808, 809, 811, 812, 813, 814, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 830, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 848, 849, 850, 851, 852, 854, 856, 857, 858, 859, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 911, 914, 916, 917, 918, 919, 920, 921, 923, 924, 925, 926, 927, 929, 931, 932, 933, 934, 935, 936, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 965, 967, 970, 972, 976, 977, 978, 979, 981, 984, 986, 987, 988, 989, 995, 1000, 1101, 1104, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1151, 1153, 1154, 1155, 1156, 1158, 1163, 1164, 1166, 1167, 1171, 1172, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1197, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1522, 1972, 2040, 2041, 2042, 2044, 2047, 2051, 2060, 2071, 2072, 2082, 2097, 2108, 2148, 2149, 2155, 2160, 2182, 2183, 2184, 2186, 2187, 2188, 2193, 2194, 2195, 2196, 2197, 2198, 2217, 2326, 2386, 2388, 2522, 2523, 2524, 2751, 2814, 2821, 2857, 2868, 2869, 2875, 2881, 2882, 2883, 2884, 2885, 2886, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 2916, 2938, 2965, 2966, 2967, 2979, 3041, 3051, 3060, 3071, 3386, 3522, 3523, 4522,
        };
        static HashSet<int> Supported2024 => new HashSet<int>
        {
            1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 132, 133, 134, 135, 136, 137, 139, 140, 142, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 162, 163, 165, 166, 169, 170, 171, 172, 173, 183, 184, 185, 186, 217, 231, 250, 251, 252, 253, 254, 255, 309, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 336, 338, 340, 341, 342, 343, 344, 345, 354, 355, 356, 357, 358, 359, 360, 365, 366, 367, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 391, 393, 394, 395, 399, 401, 410, 411, 412, 413, 417, 420, 421, 430, 431, 440, 441, 450, 451, 460, 461, 470, 471, 472, 480, 501, 502, 504, 506, 507, 509, 514, 515, 518, 519, 522, 523, 524, 525, 526, 533, 535, 555, 556, 557, 580, 751, 760, 761, 800, 801, 802, 807, 808, 809, 811, 812, 813, 814, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 830, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 848, 849, 850, 851, 852, 854, 856, 857, 858, 859, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 911, 914, 916, 917, 918, 919, 920, 921, 923, 924, 925, 926, 927, 929, 931, 932, 933, 934, 935, 936, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 965, 967, 970, 972, 976, 977, 978, 979, 981, 984, 986, 987, 988, 989, 995, 1000, 1101, 1104, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1151, 1153, 1154, 1155, 1156, 1158, 1163, 1164, 1166, 1167, 1171, 1172, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1197, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1522, 1972, 2040, 2041, 2042, 2044, 2047, 2051, 2060, 2071, 2072, 2082, 2097, 2108, 2148, 2149, 2155, 2160, 2182, 2183, 2184, 2186, 2187, 2188, 2193, 2194, 2195, 2196, 2197, 2198, 2217, 2326, 2386, 2388, 2522, 2523, 2524, 2751, 2814, 2821, 2857, 2868, 2869, 2875, 2881, 2882, 2883, 2884, 2885, 2886, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 2916, 2938, 2965, 2966, 2967, 2979, 3041, 3051, 3060, 3071, 3386, 3522, 3523, 4522,
        };
        static HashSet<int> Risk2016 => new HashSet<int>
        {
            119, 189, 317, 346, 347, 348, 349, 350, 351, 352, 353, 368, 369, 390, 392, 397, 398, 415, 810, 828, 845, 853, 855, 864, 876, 898, 903, 912, 915, 922, 930, 962, 963, 968, 971, 973, 1105, 1159, 1160, 1176,
        };
        static HashSet<int> Risk2017 => new HashSet<int>()
        {
            119, 189, 317, 346, 347, 348, 349, 350, 351, 352, 353, 368, 369, 390, 392, 397, 398, 415, 810, 828, 845, 922, 930, 962, 963, 968, 973, 1159, 1160, 1176,
        };
        static HashSet<int> Risk2018 => new HashSet<int>()
        {
            119, 189, 317, 346, 347, 348, 349, 350, 351, 352, 353, 368, 369, 390, 392, 397, 398, 415, 810, 828, 845, 922, 930, 962, 963, 968, 973, 1159, 1160, 1176,
        };
        static HashSet<int> Risk2019 => new HashSet<int>()
        {
            119, 189, 317, 346, 347, 348, 349, 350, 351, 352, 353, 368, 369, 390, 392, 397, 398, 415, 810, 828, 845, 922, 930, 962, 963, 968, 973, 1159, 1160, 1176,
        };
        static HashSet<int> Risk2020 => new HashSet<int>()
        {
            119, 189, 317, 346, 347, 348, 349, 350, 351, 352, 353, 368, 369, 390, 392, 397, 398, 415, 810, 828, 845, 922, 930, 962, 963, 968, 973, 1159, 1160, 1176,
        };
        static HashSet<int> Risk2021 => new HashSet<int>()
        {
            119, 189, 317, 346, 347, 348, 349, 350, 351, 352, 353, 368, 369, 390, 392, 397, 398, 415, 810, 828, 845, 922, 930, 962, 963, 968, 973, 1159, 1160, 1176,
        };
        static HashSet<int> Risk2022 => new HashSet<int>()
        {
            119, 189, 317, 346, 347, 348, 349, 350, 351, 352, 353, 368, 369, 390, 392, 397, 398, 415, 810, 828, 845, 922, 930, 962, 963, 968, 973, 1159, 1160, 1176,
        };
        static HashSet<int> Risk2023 => new HashSet<int>()
        {
            119, 189, 317, 346, 347, 348, 349, 350, 351, 352, 353, 368, 369, 390, 392, 397, 398, 415, 810, 828, 845, 922, 930, 962, 963, 968, 973, 1159, 1160, 1176,
        };
        static HashSet<int> Risk2024 => new HashSet<int>()
        {
            119, 189, 317, 346, 347, 348, 349, 350, 351, 352, 353, 368, 369, 390, 392, 397, 398, 415, 810, 828, 845, 922, 930, 962, 963, 968, 973, 1159, 1160, 1176,
        };
        #endregion
    }
}
